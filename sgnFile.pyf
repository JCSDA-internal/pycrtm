!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module pycrtm ! in 
    interface  ! in :pycrtm
        module pycrtm ! in :pycrtm:pycrtm.f90
            subroutine wrap_forward(coefficientpath,sensor_id,zenithangle,scanangle,azimuthangle,solarangle,nchan,n_layers,pressurelevels,pressurelayers,temperaturelayers,humiditylayers,ozoneconclayers,surfacetype,surfacetemperature,windspeed10m,winddirection10m,outtb) ! in :pycrtm:pycrtm.f90:pycrtm
                use crtm_module
                character*1024 intent(in) :: coefficientpath
                character(len=256) dimension(1),intent(in) :: sensor_id
                real intent(in) :: zenithangle
                real intent(in) :: scanangle
                real intent(in) :: azimuthangle
                real intent(in) :: solarangle
                integer, optional,intent(in),check(len(outtb)>=nchan),depend(outtb) :: nchan=len(outtb)
                integer, optional,intent(in),check(len(pressurelevels)>=n_layers),depend(pressurelevels) :: n_layers=len(pressurelevels)
                real dimension(n_layers),intent(in) :: pressurelevels
                real dimension(n_layers),intent(in),depend(n_layers) :: pressurelayers
                real dimension(n_layers),intent(in),depend(n_layers) :: temperaturelayers
                real dimension(n_layers),intent(in),depend(n_layers) :: humiditylayers
                real dimension(n_layers),intent(in),depend(n_layers) :: ozoneconclayers
                integer intent(in) :: surfacetype
                real intent(in) :: surfacetemperature
                real intent(in) :: windspeed10m
                real intent(in) :: winddirection10m
                real dimension(nchan) :: outtb
            end subroutine wrap_forward
            subroutine wrap_k_matrix(coefficientpath,sensor_id,zenithangle,scanangle,azimuthangle,solarangle,nchan,n_layers,pressurelevels,pressurelayers,temperaturelayers,humiditylayers,ozoneconclayers,surfacetype,surfacetemperature,windspeed10m,winddirection10m,outtb,outtransmission,temperaturejacobian,humidityjacobian,ozonejacobian) ! in :pycrtm:pycrtm.f90:pycrtm
                use crtm_module
                character*1024 intent(in) :: coefficientpath
                character(len=256) dimension(1),intent(in) :: sensor_id
                real intent(in) :: zenithangle
                real intent(in) :: scanangle
                real intent(in) :: azimuthangle
                real intent(in) :: solarangle
                integer intent(in) :: nchan
                integer, optional,intent(in),check(len(pressurelevels)>=n_layers),depend(pressurelevels) :: n_layers=len(pressurelevels)
                real dimension(n_layers),intent(in) :: pressurelevels
                real dimension(n_layers),intent(in),depend(n_layers) :: pressurelayers
                real dimension(n_layers),intent(in),depend(n_layers) :: temperaturelayers
                real dimension(n_layers),intent(in),depend(n_layers) :: humiditylayers
                real dimension(n_layers),intent(in),depend(n_layers) :: ozoneconclayers
                integer intent(in) :: surfacetype
                real intent(in) :: surfacetemperature
                real intent(in) :: windspeed10m
                real intent(in) :: winddirection10m
                real dimension(nchan),intent(out),depend(nchan) :: outtb
                real dimension(nchan,n_layers),intent(out),depend(nchan,n_layers) :: outtransmission
                real dimension(nchan,n_layers),intent(out),depend(nchan,n_layers) :: temperaturejacobian
                real dimension(nchan,n_layers),intent(out),depend(nchan,n_layers) :: humidityjacobian
                real dimension(nchan,n_layers),intent(out),depend(nchan,n_layers) :: ozonejacobian
            end subroutine wrap_k_matrix
            subroutine test_data_us_std(level_pressure,pressure,temperature,water_vapor,ozone) ! in :pycrtm:pycrtm.f90:pycrtm
                real dimension(93),intent(out) :: level_pressure
                real dimension(92),intent(out) :: pressure
                real dimension(92),intent(out) :: temperature
                real dimension(92),intent(out) :: water_vapor
                real dimension(92),intent(out) :: ozone
            end subroutine test_data_us_std
            subroutine test_data_tropical(level_pressure,pressure,temperature,water_vapor,ozone) ! in :pycrtm:pycrtm.f90:pycrtm
                real dimension(93),intent(out) :: level_pressure
                real dimension(92),intent(out) :: pressure
                real dimension(92),intent(out) :: temperature
                real dimension(92),intent(out) :: water_vapor
                real dimension(92),intent(out) :: ozone
            end subroutine test_data_tropical
        end module pycrtm
    end interface 
end python module pycrtm

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
